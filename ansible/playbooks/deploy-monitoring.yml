- name:  Deploy Monitoring Stack
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    rbac_files:
      - "{{ playbook_dir }}/../../k8s/permisos-rbac/prometheus-role.yaml"
      - "{{ playbook_dir }}/../../k8s/permisos-rbac/prometheus-rolebinding.yaml"
    prometheus_rule: "{{ playbook_dir }}/../../infra/prometheus/prometheus-rule.yaml"
    prometheus_config: "{{ playbook_dir }}/../../infra/prometheus/prometheus.yaml"
    alertmanager_config: "{{ playbook_dir }}/../../infra/alertmanager/alertmanager-config.yaml"
    monitoring_manifests: "{{ query('fileglob', playbook_dir ~ '/../../k8s/monitoring/*.yaml') }}"
    telegram_manifests: "{{ query('fileglob', playbook_dir ~ '/../../k8s/telegram-webhook/*.yaml') }}"
    network_manifests: "{{ query('fileglob', playbook_dir ~ '/../../k8s/deployments/*.yaml') }}"

  tasks:

    # Prometheus RBAC
    - name: Apply Prometheus RBAC
      shell: kubectl apply --validate=false -f "{{ item }}"
      loop: "{{ rbac_files }}"
      tags: prometheus_rbac

    # Prometheus Rules
    - name: Apply Prometheus rules
      shell: kubectl apply --validate=false -f "{{ prometheus_rule }}"
      tags: prometheus_rules

    # Prometheus ConfigMap
    - name: Apply Prometheus config (ConfigMap)
      shell: |
        kubectl create configmap prometheus-config \
          --from-file="{{ prometheus_config }}" \
          -n monitoring --dry-run=client -o yaml | kubectl apply -f -
      ignore_errors: yes
      tags: prometheus_config

    # Monitoring Services
    - name: Apply monitoring services
      shell: kubectl apply --validate=false -f "{{ item }}"
      loop: "{{ monitoring_manifests }}"
      when: item is file
      ignore_errors: yes
      tags: monitoring_services

    # Alertmanager
    - name: Apply Alertmanager config
      shell: kubectl apply --validate=false -f "{{ alertmanager_config }}"
      tags: alertmanager

    # Telegram Webhook
    - name: Deploy Telegram webhook
      shell: kubectl apply --validate=false -f "{{ item }}"
      loop: "{{ telegram_manifests }}"
      when: item is file
      ignore_errors: yes
      tags: telegram_webhook

    # Network Monitor
    - name: Deploy Network Monitor
      shell: kubectl apply --validate=false -f "{{ item }}"
      loop: "{{ network_manifests }}"
      when: item is file
      ignore_errors: yes
      tags: network_monitor

    # Notificaci√≥n final
    - name: Notify deployment success
      shell: echo "Monitoring stack deployed successfully"
      tags: notify
